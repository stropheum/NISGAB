//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by NisGab's code generation tooling
//     from Assets/Config/InputSystemActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace NisGab
{
	public class InputEvent : UnityCodeExtensions.LazySingleton<InputEvent>
	{
		public static PlayerInputActions Player { get; private set; } = new();
		public static UIInputActions UI { get; private set; } = new();
		public static DevConsoleInputActions DevConsole { get; private set; } = new();

		private InputSystemActions _inputSystemActions;

		protected override void Awake()
		{
			base.Awake();
			Initialize();
		}

		private void OnDestroy()
		{
			UnInitialize();
		}

		private void OnApplicationQuit()
		{
			if (this != null) { Destroy(this); }
		}

		public void EnablePlayerInput()
		{
		    if (_inputSystemActions.Player.enabled) { return; }
		    _inputSystemActions.Player.Enable();
		}

		public void DisablePlayerInput()
		{
			if (!_inputSystemActions.Player.enabled) { return; }
			_inputSystemActions.Player.Disable();
		}

		public void EnableUIInput()
		{
		    if (_inputSystemActions.UI.enabled) { return; }
		    _inputSystemActions.UI.Enable();
		}

		public void DisableUIInput()
		{
			if (!_inputSystemActions.UI.enabled) { return; }
			_inputSystemActions.UI.Disable();
		}

		public void EnableDevConsoleInput()
		{
		    if (_inputSystemActions.DevConsole.enabled) { return; }
		    _inputSystemActions.DevConsole.Enable();
		}

		public void DisableDevConsoleInput()
		{
			if (!_inputSystemActions.DevConsole.enabled) { return; }
			_inputSystemActions.DevConsole.Disable();
		}

		private void Initialize()
		{
			_inputSystemActions = new InputSystemActions();
			Player.Bind(_inputSystemActions.Player);
			UI.Bind(_inputSystemActions.UI);
			DevConsole.Bind(_inputSystemActions.DevConsole);
		}

		private void UnInitialize()
		{
			if (_inputSystemActions == null) { return; }
			Player.UnBind(_inputSystemActions.Player);
			UI.UnBind(_inputSystemActions.UI);
			DevConsole.UnBind(_inputSystemActions.DevConsole);
		}
	}
}